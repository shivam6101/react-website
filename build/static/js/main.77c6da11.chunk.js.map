{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todolist","activeItems","id","title","completed","editing","fetchTasks","bind","handlechange","handlesubmit","getCookie","deleteitem","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","console","log","fetch","then","Response","json","data","setState","e","target","value","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","response","catch","error","task","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","startedit","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.77c6da11.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor (props){\n    super(props);\n    this.state={\n      todolist:[],\n      activeItems:{\n        id:null,\n        title:'',\n        completed:false,\n      },\n      editing:false,\n    }\n    this.fetchTasks=this.fetchTasks.bind(this)\n    this.handlechange=this.handlechange.bind(this)\n    this.handlesubmit=this.handlesubmit.bind(this)\n    this.getCookie=this.getCookie.bind(this)\n    this.deleteitem=this.deleteitem.bind(this)\n  };\n  getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n  componentWillMount(){\n    this.fetchTasks()\n  }\n  fetchTasks(){\n    console.log('fetchlog')\n    fetch('http://127.0.0.1:8000/api/task-list')\n    .then(Response=>Response.json())\n    .then(data=>\n      this.setState({\n        todolist:data\n      })\n    )\n  }\n  handlechange(e){\n    var name=e.target.name\n    var value=e.target.value\n    console.log('name:',name)\n    console.log('value:',value)\n    this.setState({\n      activeItems:{\n        ...this.state.activeItems,\n        title:value\n      }\n    })\n  }\n  handlesubmit(e){\n    e.preventDefault()\n    console.log('ITEM:',this.state.activeItems)\n    var csrftoken=this.getCookie('csrftoken')\n    var url='http://127.0.0.1:8000/api/task-create'\n    if(this.state.editing === true){\n      url=`http://127.0.0.1:8000/api/task-update/${this.state.activeItems.id}`\n      this.setState({\n        editing:false\n      })\n    }\n    fetch(url,{\n      method:'POST',\n      headers:{\n        'Content-type':'application/json',\n        'X-CSRFToken':csrftoken,\n      },\n      body:JSON.stringify(this.state.activeItems)\n    }).then((response)=>{\n      this.fetchTasks()\n      this.setState({\n        activeItems:{\n          id:null,\n          title:'',\n          completed:false,\n        }\n      })\n    }).catch(function(error){\n      console.log('ERROR:',error)\n    })\n  }\n  startedit(task){\n    this.setState({\n      activeItems:task,\n      editing:true,\n    })\n  }\n  deleteitem(task){\n    var csrftoken=this.getCookie('csrftoken')\n    fetch(`http://127.0.0.1:8000/api/task-delete/${task.id}`,{\n      method:'DELETE',\n      headers:{\n        'Content-type':'application/json',\n        'X-CSRFToken':csrftoken,\n      },\n    }).then((response)=>{\n      this.fetchTasks()\n    })\n  }\n  render(){\n    var tasks=this.state.todolist\n    var self=this\n    return(\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handlesubmit} id=\"form\">\n            <div className=\"flex-wrapper\">\n              <div style={{flex:6}}>\n                <input onChange={this.handlechange} className=\"form-control\" id=\"title\" value={this.state.activeItems.title} type=\"text\" name=\"title\" placeholder=\"Add Task\"></input>\n              </div> \n              <div style={{flex:1}}>\n                <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name='add' />\n              </div>\n            </div>\n          </form>\n        </div>\n        <div id=\"list-wrapper\">\n          {tasks.map(function(task,index){\n            return(\n              <div key={index} className=\"task-wrapper flex-wrapper\">\n                <div style={{flex:7}}>\n                  <span>{task.title}</span>\n                </div>\n                <div style={{flex:1}}>\n                  <button onClick={()=>self.startedit(task)} className=\"btn btn-sm btn-outline-info\">Edit</button>\n                </div>\n                <div style={{flex:1}}>\n                  <button onClick={()=>self.deleteitem(task)} className=\"btn btn-sm btn-outline-dark delete\">-</button>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}